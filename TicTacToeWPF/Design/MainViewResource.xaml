<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style TargetType="{x:Type ToggleButton}" x:Key="IN.TGL">
        <Setter Property="IsChecked" Value="{Binding IsChecked}"/>
        <Setter Property="IsEnabled" Value="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=DataContext.IsActivated}"/>
        <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=DataContext.ClickCommand}"/>
        <Setter Property="CommandParameter" Value="{Binding}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <ControlTemplate.Resources>
                        <Style TargetType="{x:Type Border}" x:Key="IN.BDR">
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="BorderBrush" Value="#333333"/>
                            <Setter Property="BorderThickness" Value="1 1 1 1"/>
                        </Style>
                        <Style TargetType="{x:Type Viewbox}" x:Key="IN.VIEW">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Setter Property="Width" Value="60"/>
                            <Setter Property="Height" Value="60"/>
                        </Style>
                        <Style TargetType="{x:Type Path}" x:Key="IN.ICON">
                            <Setter Property="Width" Value="24"/>
                            <Setter Property="Height" Value="24"/>
                            <Setter Property="Data" Value="{StaticResource GEO.O}"/>
                            <Setter Property="Fill" Value="CornflowerBlue"/>
                        </Style>
                    </ControlTemplate.Resources>
                    <Border Style="{StaticResource IN.BDR}">
                        <Viewbox x:Name="vbox" Style="{StaticResource IN.VIEW}">
                            <Path x:Name="icon" Style="{StaticResource IN.ICON}"/>
                        </Viewbox>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsActivated}" Value="false">
                            <Setter Property="IsEnabled" Value="True"/>
                        </DataTrigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="vbox" Property="Visibility" Value="Visible"/>
                            <Setter Property="IsHitTestVisible" Value="False"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding PlayerType}" Value="X">
                            <Setter TargetName="icon" Property="Data" Value="{StaticResource GEO.X}"/>
                            <Setter TargetName="icon" Property="Fill" Value="PaleVioletRed"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="TXB.PLAYER.01">
        <Setter Property="Text" Value="Player 1"/>
        <Setter Property="Foreground" Value="#1A2423"/>
        <Setter Property="FontSize" Value="17"/>
        <Setter Property="FontWeight" Value="Bold"/>
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="TXB.PLAYER.02">
        <Setter Property="Text" Value="Player 2"/>
        <Setter Property="Foreground" Value="#1A2423"/>
        <Setter Property="FontSize" Value="17"/>
        <Setter Property="FontWeight" Value="Bold"/>
    </Style>

    <Style TargetType="{x:Type TextBox}" x:Key="TXT.PLAYER">
        <Setter Property="Width" Value="120"/>
        <Setter Property="MaxWidth" Value="120"/>
        <Setter Property="Height" Value="28"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Margin" Value="15 0 0 1"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="MaxLength" Value="15"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <ControlTemplate.Resources>
                        <Style TargetType="{x:Type Border}" x:Key="IN.BDR">
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="BorderBrush" Value="#3f4242"/>
                            <Setter Property="BorderThickness" Value="2 2 2 2"/>
                        </Style>
                        <Style TargetType="{x:Type TextBlock}" x:Key="IN.CONTENT">
                            <Setter Property="Text" Value="Player Name"/>
                            <Setter Property="VerticalAlignment" Value="Center"/>
                            <Setter Property="Padding" Value="3 0 0 0"/>
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Setter Property="Foreground" Value="#444444"/>
                            <Setter Property="FontSize" Value="12"/>
                        </Style>
                        <Style TargetType="{x:Type ScrollViewer}" x:Key="IN.SCROLL">
                            <Setter Property="Focusable" Value="False"/>
                            <Setter Property="VerticalAlignment" Value="Bottom"/>
                            <Setter Property="Margin" Value="0 0 0 1"/>
                            <Setter Property="Padding" Value="0 0 0 0"/>
                            <Setter Property="HorizontalScrollBarVisibility" Value="Hidden"/>
                            <Setter Property="VerticalScrollBarVisibility" Value="Hidden"/>
                        </Style>
                    </ControlTemplate.Resources>
                    <Border x:Name="border" Style="{StaticResource IN.BDR}">
                        <Grid>
                            <TextBlock x:Name="placeholder" Style="{StaticResource IN.CONTENT}"/>
                            <ScrollViewer x:Name="PART_ContentHost" Style="{StaticResource IN.SCROLL}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Text}" Value="">
                            <Setter TargetName="placeholder" Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter TargetName="placeholder" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="#328f8c"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#328f8c"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="BTN.START">
        <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=DataContext.StartCommand}"/>
        <Setter Property="Grid.Row" Value="1"/>
        <Setter Property="Width" Value="130"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Margin" Value="20 60 0 0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ControlTemplate.Resources>
                        <Style TargetType="{x:Type Border}" x:Key="IN.BDR">
                            <Setter Property="Background" Value="#7bdbd1"/>
                            <Setter Property="BorderBrush" Value="#63b8af"/>
                            <Setter Property="BorderThickness" Value="2 2 2 2"/>
                            <Setter Property="CornerRadius" Value="8"/>
                        </Style>
                        <Style TargetType="{x:Type TextBlock}" x:Key="IN.TEXT">
                            <Setter Property="Text" Value="GAME START"/>
                            <Setter Property="Foreground" Value="#1A2423"/>
                            <Setter Property="FontSize" Value="18"/>
                            <Setter Property="FontWeight" Value="Bold"/>
                            <Setter Property="VerticalAlignment" Value="Center"/>
                            <Setter Property="TextAlignment" Value="Center"/>
                        </Style>
                    </ControlTemplate.Resources>
                    <Border x:Name="border" Style="{StaticResource IN.BDR}">
                        <TextBlock Style="{StaticResource IN.TEXT}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#5dcfc3"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="#47ada3"/>
                            <Setter Property="Cursor" Value="Hand"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="BTN.RESTART">
        <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=DataContext.RestartCommand}"/>
        <Setter Property="Grid.Row" Value="2"/>
        <Setter Property="Width" Value="130"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Content" Value="RESTART"/>
        <Setter Property="Margin" Value="20 20 0 20"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ControlTemplate.Resources>
                        <Style TargetType="{x:Type Border}" x:Key="IN.BDR">
                            <Setter Property="Background" Value="#ffbf6b"/>
                            <Setter Property="BorderBrush" Value="#fcb14e"/>
                            <Setter Property="BorderThickness" Value="2 2 2 2"/>
                            <Setter Property="CornerRadius" Value="8"/>
                        </Style>
                        <Style TargetType="{x:Type TextBlock}" x:Key="IN.TEXT">
                            <Setter Property="Text" Value="RESTART"/>
                            <Setter Property="Foreground" Value="#1A2423"/>
                            <Setter Property="FontSize" Value="18"/>
                            <Setter Property="FontWeight" Value="Bold"/>
                            <Setter Property="VerticalAlignment" Value="Center"/>
                            <Setter Property="TextAlignment" Value="Center"/>
                        </Style>
                    </ControlTemplate.Resources>
                    <Border x:Name="border" Style="{StaticResource IN.BDR}">
                        <TextBlock Style="{StaticResource IN.TEXT}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#ffb85c"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="#e8a34a"/>
                            <Setter Property="Cursor" Value="Hand"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

	<Style TargetType="{x:Type TextBlock}" x:Key="TXB.WINNER">
		<Setter Property="HorizontalAlignment" Value="Center"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="Margin" Value="0 10 0 0"/>
		<Setter Property="Text" Value="{Binding Winner.PlayerType}"/>
		<Setter Property="Visibility" Value="{Binding Winner.PlayerType, Converter={StaticResource ValueExistsToVisibilityConverter}}"/>
	</Style>
</ResourceDictionary>